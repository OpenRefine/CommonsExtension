# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  release:
    types: [created]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven

    - name: Setup Node
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Restore dependency cache
      uses: actions/cache@v4
      with:
        path: |
          cypress/openrefine-*.tar.gz
          **/node_modules
        key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

    - name: Build with Maven
      run: mvn -B package

    - name: Install Cypress
      run: |
        cd ./cypress
        npm i -g yarn
        yarn install

    - name: Run Cypress tests
      run: ./cypress/run_headless.sh

    - name: Get release upload URL
      id: get_release_upload_url
      if: github.event_name == 'release'
      uses: bruceadams/get-release@v1.3.2
      env:
        GITHUB_TOKEN: ${{ github.token }}

    - name: Upload release asset
      id: upload-release-asset
      if: github.event_name == 'release'
      uses: shogo82148/actions-upload-release-asset@v1.7.5
      with:
        upload_url: ${{ steps.get_release_upload_url.outputs.upload_url }}
        asset_path: ./target/openrefine-commons-extension-${{ env.VERSION_STRING }}.zip
        asset_name: openrefine-commons-extension-${{ env.VERSION_STRING }}.zip
        asset_content_type: application/zip
  
